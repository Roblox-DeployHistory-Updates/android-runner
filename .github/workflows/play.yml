name: Google Play Action Runner
permissions: write-all

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:
jobs:
  run-play-tool:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Play Tool
        run: |
          curl -L "$PLAY_DL" -o play-linux.zip
          curl -L "$PLAY_TOKEN" -o play-token.zip
          unzip -o play-linux.zip
          chmod +x play

          mkdir -p ~/google/play/
          unzip -o play-token.zip -d ~/google/play/
        env:
          PLAY_DL: ${{ vars.PLAY_DL }}
          PLAY_TOKEN: ${{ secrets.PLAY_TOKEN }}

      - name: Run play tool and check release
        id: check-release
        run: |
          APP_OUTPUT=$(./play -a com.roblox.client -p 2)
          echo "$APP_OUTPUT"

          # Parse version code and version name
          VERSION_CODE=$(echo "$APP_OUTPUT" | grep "version code:" | awk '{print $3}')
          VERSION_NAME=$(echo "$APP_OUTPUT" | grep "version name:" | awk '{print $3}')
          echo "version code: $VERSION_CODE"
          echo "version name: $VERSION_NAME"

          # Check if release exists
          RELEASE_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/$VERSION_CODE"
          if curl --silent --fail "$RELEASE_URL" > /dev/null; then
            echo "Release $VERSION_CODE already exists."
          else
            echo "Release $VERSION_CODE does not exist. Downloading APKs..."
            ./play -a com.roblox.client -p 2 -v $VERSION_CODE
            ./play -a com.roblox.client -p 1 -v $VERSION_CODE
            ./play -a com.roblox.client -p 5 -v $VERSION_CODE
          fi

      - name: Create release and upload APKs
        if: steps.check-release.outputs.VERSION_CODE != ''
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.check-release.outputs.VERSION_CODE }}
          releaseName: "${{ steps.check-release.outputs.VERSION_NAME }} (${{ steps.check-release.outputs.VERSION_CODE }})"
          body: ${ steps.check-release.outputs.APP_OUTPUT }
          files: ./*.apk